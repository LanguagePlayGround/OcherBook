crashes:
    crash when power saver kicks on (realloc -32 from libev)
    run with DEBUG for crashes...  but crap backtraces!
first draw of boot menu hangs; puts kernel in bad state
sleep:
    can't wake up sometimes
    clear event q when waking
finish wiring events into libev, fire via signal/slot
    inotify for card in Filesystem
        Filesystem::fireEvents
    power saver
    periodically refresh battery icon
fb can get garbled
    related to killall animator?
    bootloader prevents nickel from starting - garbled screen
fix text centering
ocher .o outside of build dir
proper atomics on ARM
persist user state
    json -- jsmn?
    shelf, meta
    settings

write install walkthrough
clean up website
downloadable builds

utility menu: reboot, boot to nickel, ...
front page should reflect most recent book
    "selected" doesn't bubble to top -- need another Shelf (MostRecent)?
css
"Attempted recursive use of the logger"
remove drawing directly in evt callbacks (HomeActivity::evtMouse, g_fb->update, ...)
beware adding child multiple times / removeChild for shared
position - abs, rel, .....???!!!
widgets shouldn't hit g_fb; use screen

windows should have their own fg/bg colors, not the fb
fix SDL shutdown (#39)
ioc:
    g_*

rearrange system bar like gnome/mac:
    "HOME" icon
chapter/TOC hot links
sync adds multiple copies
    database
control LEDs
"make dist"
    updated rcS
networking
    for now, store in config file
    wpa_cli
    link quality

support USB keyboard
clean up object model:
    LibraryActivity
        nav buttons - impl as Widgets; fade disabled
    BatteryIcon should be a Icon
font search path
make UI scalable to other res
    make SDL window resizable
font size does not always pop correctly
Show/hide SystemBar causes page to shift
improve startup time:  don't parse so much to get metadata
flag in Meta what hasn't been discovered yet (expensive to create icon, ...)
widget
    pop up menus
    packing
    make dirty rects more granular (eg, hiding SystemBar doesn't reflow entire page)
g_fb->bbox vs m_rect

do settings apply before or after layout?
    better definition around what AttrSizeAbs, etc mean
    are absolute font sizes really absolute while in the layout?
settings:
    date format
    user's name

fonts
    layout by line, to do centering
    justify:  full, right
    FE: build some higher-level abstractions
    font path, scan ttf files, font families, ...
    font preferences

remove exceptions from File
clean up Path/File to be simpler, more posix-like

first-run routine:
    select language

low battery warning
usb plugged in

group book series
