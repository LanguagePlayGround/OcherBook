0.0.8 - build UI
ability to select book via fb
    windowing system
        widget signal/slot model....
            http://www.erikyyy.de/sigslot/
        finish kobo events (see evtest, ...)
FontEngine

0.0.9 - improve UI
margins
word wrap on fb
    http://www.freetype.org/freetype2/docs/tutorial/step2.html
font selection (don't hardcode filename!)
flag in Meta what hasn't been discovered yet (expensive to create icon, ...)
SDL is not greyscale
do settings apply before or after layout?
    better definition around what AttrSizeAbs, etc mean
    are absolute font sizes really absolute while in the layout?

0.1.0
testing
valgrind...
survive purgatory.sh



device specific:
    - abstractions:
        - filesystem
    - Kobo:
        - framebuffer
        - suspend / resume
        - touch input
        - home, power button

layout:
    - pagination
        - discrete pages vs scrollable (makes no sense on e-ink)
    - margins
    - FreeType:
        - glyph cache
            - FTC_Manager_New
        - integrate into RenderFd for real word wrap
    - option to build some fonts into the binary for easy install
    - images

build system:
    - config system (current ocher.config is a mess)
    - modularize
    - detect platform, etc...
    - download tool
    - include kobo linux headers, for easier build
    - option to build-in all resources (fonts, icons, ...)

renderers:
    - user able to interrupt any long-running layout action
        - SDL seems to block signals by default
    - fd
    - ncurses
    - sdl
    - kobo mx50
    - ...
    - generic text printing routines
        - make FreeType optional (genericise as FontEngine)

formats:
    - probe file type
    - test UTF8 throughout
    - epub
        - CSS
    - text
    - markdown
    - ...

per-user:
    - all user record with optional OpenSSL-compatible encryption
    - keep personal log of books read (title, author, date, notes, ...)?
    - reading wish list
    - ability to export per-use stats
    - annotations
    - settings
        - fonts
        - past settings (these settings suck, want to undo)
        - ability to force settings (book can't change margins, font size, ...)
        - start / stop date of reading book
        - way to share metadata about the book (tweet / ... ?)

features:
    - live links (eg: table of contents)
    - ability to compile-out large features
    - search
    - bookmarks
    - annotations
    - dictionary
    - time / date / calendar view
    - geek features:
        - options to validate epubs?
        - wirelessly sync with epubs on home server
    - organization:
        - consider separate use cases:
            - using ereader primarily vs synchronizing with server
        - ways of grouping / searching (author, genre, read/haven't read, ...)
        - how to attach metadata to each book?

harden:
    - test harness
    - valgrind across many epubs
    - huge fonts crash
    - non-linux platforms hang in global ctor realloc
    - guerilla testing
    - general strategy for OOM

cleanup:
    - remove exceptions from File
    - allow std::bad_alloc?
    - clean up Path/File to be simpler, more posix-like

docs:
    - document complete walk-through of installing, recovery, etc
    - built-in links to free ebooks?

reader features:
    - pan
    - zoom
    - flip

metadata:
    - cache metadata in dotfiles beside the epub

translations

bluesky:
    - RSS
    - other free content
    - ...

